// Copyright 2016 Jonathan Anderson <jonathan.anderson@mun.ca>
//
// This software was developed by BAE Systems, the University of Cambridge
// Computer Laboratory, and Memorial University under DARPA/AFRL contract
// FA8650-15-C-7558 ("CADETS"), as part of the DARPA Transparent Computing
// (TC) research program.
//
// Licensed under the Apache License, Version 2.0,
// <LICENSE-APACHE or http://apache.org/licenses/LICENSE-2.0>
// or the MIT license <LICENSE-MIT or http://opensource.org/licenses/MIT>,
// at your option. This file may not be copied, modified, or distributed
// except according to those terms.

use ::{Error,Result};


pub fn name(id: usize) -> Result<String> {
    match id {
        0 => Ok("nosys"),
        1 => Ok("sys_exit"),
        2 => Ok("fork"),
        3 => Ok("read"),
        4 => Ok("write"),
        5 => Ok("open"),
        6 => Ok("close"),
        7 => Ok("wait4"),
        8 => Ok("creat"),
        9 => Ok("link"),
        10 => Ok("unlink"),
        12 => Ok("chdir"),
        13 => Ok("fchdir"),
        14 => Ok("mknod"),
        15 => Ok("chmod"),
        16 => Ok("chown"),
        17 => Ok("obreak"),
        18 => Ok("getfsstat"),
        19 => Ok("lseek"),
        20 => Ok("getpid"),
        21 => Ok("mount"),
        22 => Ok("unmount"),
        23 => Ok("setuid"),
        24 => Ok("getuid"),
        25 => Ok("geteuid"),
        26 => Ok("ptrace"),
        27 => Ok("recvmsg"),
        28 => Ok("sendmsg"),
        29 => Ok("recvfrom"),
        30 => Ok("accept"),
        31 => Ok("getpeername"),
        32 => Ok("getsockname"),
        33 => Ok("access"),
        34 => Ok("chflags"),
        35 => Ok("fchflags"),
        36 => Ok("sync"),
        37 => Ok("kill"),
        38 => Ok("stat"),
        39 => Ok("getppid"),
        40 => Ok("lstat"),
        41 => Ok("dup"),
        42 => Ok("pipe"),
        43 => Ok("getegid"),
        44 => Ok("profil"),
        45 => Ok("ktrace"),
        46 => Ok("sigaction"),
        47 => Ok("getgid"),
        48 => Ok("sigprocmask"),
        49 => Ok("getlogin"),
        50 => Ok("setlogin"),
        51 => Ok("acct"),
        52 => Ok("sigpending"),
        53 => Ok("sigaltstack"),
        54 => Ok("ioctl"),
        55 => Ok("reboot"),
        56 => Ok("revoke"),
        57 => Ok("symlink"),
        58 => Ok("readlink"),
        59 => Ok("execve"),
        60 => Ok("umask"),
        61 => Ok("chroot"),
        62 => Ok("fstat"),
        63 => Ok("getkerninfo"),
        64 => Ok("getpagesize"),
        65 => Ok("msync"),
        66 => Ok("vfork"),
        69 => Ok("sbrk"),
        70 => Ok("sstk"),
        71 => Ok("mmap"),
        72 => Ok("ovadvise"),
        73 => Ok("munmap"),
        74 => Ok("mprotect"),
        75 => Ok("madvise"),
        78 => Ok("mincore"),
        79 => Ok("getgroups"),
        80 => Ok("setgroups"),
        81 => Ok("getpgrp"),
        82 => Ok("setpgid"),
        83 => Ok("setitimer"),
        84 => Ok("wait"),
        85 => Ok("swapon"),
        86 => Ok("getitimer"),
        87 => Ok("gethostname"),
        88 => Ok("sethostname"),
        89 => Ok("getdtablesize"),
        90 => Ok("dup2"),
        92 => Ok("fcntl"),
        93 => Ok("select"),
        95 => Ok("fsync"),
        96 => Ok("setpriority"),
        97 => Ok("socket"),
        98 => Ok("connect"),
        99 => Ok("accept"),
        100 => Ok("getpriority"),
        101 => Ok("send"),
        102 => Ok("recv"),
        103 => Ok("sigreturn"),
        104 => Ok("bind"),
        105 => Ok("setsockopt"),
        106 => Ok("listen"),
        108 => Ok("sigvec"),
        109 => Ok("sigblock"),
        110 => Ok("sigsetmask"),
        111 => Ok("sigsuspend"),
        112 => Ok("sigstack"),
        113 => Ok("recvmsg"),
        114 => Ok("sendmsg"),
        116 => Ok("gettimeofday"),
        117 => Ok("getrusage"),
        118 => Ok("getsockopt"),
        120 => Ok("readv"),
        121 => Ok("writev"),
        122 => Ok("settimeofday"),
        123 => Ok("fchown"),
        124 => Ok("fchmod"),
        125 => Ok("recvfrom"),
        126 => Ok("setreuid"),
        127 => Ok("setregid"),
        128 => Ok("rename"),
        129 => Ok("truncate"),
        130 => Ok("ftruncate"),
        131 => Ok("flock"),
        132 => Ok("mkfifo"),
        133 => Ok("sendto"),
        134 => Ok("shutdown"),
        135 => Ok("socketpair"),
        136 => Ok("mkdir"),
        137 => Ok("rmdir"),
        138 => Ok("utimes"),
        140 => Ok("adjtime"),
        141 => Ok("getpeername"),
        142 => Ok("gethostid"),
        143 => Ok("sethostid"),
        144 => Ok("getrlimit"),
        145 => Ok("setrlimit"),
        146 => Ok("killpg"),
        147 => Ok("setsid"),
        148 => Ok("quotactl"),
        149 => Ok("quota"),
        150 => Ok("getsockname"),

        154 => Ok("nlm_syscall"),
        155 => Ok("nfssvc"),
        156 => Ok("getdirentries"),
        157 => Ok("statfs"),
        158 => Ok("fstatfs"),
        160 => Ok("lgetfh"),
        161 => Ok("getfh"),
        162 => Ok("getdomainname"),
        163 => Ok("setdomainname"),
        164 => Ok("uname"),
        165 => Ok("sysarch"),
        166 => Ok("rtprio"),
        169 => Ok("semsys"),
        170 => Ok("msgsys"),
        171 => Ok("shmsys"),
        173 => Ok("pread"),
        174 => Ok("pwrite"),
        175 => Ok("setfib"),
        176 => Ok("ntp_adjtime"),

        181 => Ok("setgid"),
        182 => Ok("setegid"),
        183 => Ok("seteuid"),
        188 => Ok("stat"),
        189 => Ok("fstat"),
        190 => Ok("lstat"),
        191 => Ok("pathconf"),
        192 => Ok("fpathconf"),
        194 => Ok("getrlimit"),
        195 => Ok("setrlimit"),
        196 => Ok("getdirentries"),
        197 => Ok("mmap"),
        198 => Ok("nosys"),
        199 => Ok("lseek"),
        200 => Ok("truncate"),
        201 => Ok("ftruncate"),
        202 => Ok("__sysctl"),
        203 => Ok("mlock"),
        204 => Ok("munlock"),
        205 => Ok("undelete"),
        206 => Ok("futimes"),
        207 => Ok("getpgid"),
        209 => Ok("poll"),


        220 => Ok("__semctl"),
        221 => Ok("semget"),
        222 => Ok("semop"),
        224 => Ok("msgctl"),
        225 => Ok("msgget"),
        226 => Ok("msgsnd"),
        227 => Ok("msgrcv"),
        228 => Ok("shmat"),
        229 => Ok("shmctl"),
        230 => Ok("shmdt"),
        231 => Ok("shmget"),
        232 => Ok("clock_gettime"),
        233 => Ok("clock_settime"),
        234 => Ok("clock_getres"),
        235 => Ok("ktimer_create"),
        236 => Ok("ktimer_delete"),
        237 => Ok("ktimer_settime"),
        238 => Ok("ktimer_gettime"),
        239 => Ok("ktimer_getoverrun"),
        240 => Ok("nanosleep"),
        241 => Ok("ffclock_getcounter"),
        242 => Ok("ffclock_setestimate"),
        243 => Ok("ffclock_getestimate"),
        247 => Ok("clock_getcpuclockid2"),
        248 => Ok("ntp_gettime"),
        250 => Ok("minherit"),
        251 => Ok("rfork"),
        252 => Ok("openbsd_poll"),
        253 => Ok("issetugid"),
        254 => Ok("lchown"),
        255 => Ok("aio_read"),
        256 => Ok("aio_write"),
        257 => Ok("lio_listio"),
        272 => Ok("getdents"),
        274 => Ok("lchmod"),
        275 => Ok("lchown"),
        276 => Ok("lutimes"),
        277 => Ok("msync"),
        278 => Ok("nstat"),
        279 => Ok("nfstat"),
        280 => Ok("nlstat"),
        289 => Ok("preadv"),
        290 => Ok("pwritev"),
        297 => Ok("fhstatfs"),
        298 => Ok("fhopen"),
        299 => Ok("fhstat"),
        300 => Ok("modnext"),
        301 => Ok("modstat"),
        302 => Ok("modfnext"),
        303 => Ok("modfind"),
        304 => Ok("kldload"),
        305 => Ok("kldunload"),
        306 => Ok("kldfind"),
        307 => Ok("kldnext"),
        308 => Ok("kldstat"),
        309 => Ok("kldfirstmod"),
        310 => Ok("getsid"),
        311 => Ok("setresuid"),
        312 => Ok("setresgid"),
        314 => Ok("aio_return"),
        315 => Ok("aio_suspend"),
        316 => Ok("aio_cancel"),
        317 => Ok("aio_error"),
        318 => Ok("aio_read"),
        319 => Ok("aio_write"),
        320 => Ok("lio_listio"),
        321 => Ok("yield"),
        324 => Ok("mlockall"),
        325 => Ok("munlockall"),
        326 => Ok("__getcwd"),

        327 => Ok("sched_setparam "),
        328 => Ok("sched_getparam "),

        329 => Ok("sched_setscheduler "),
        330 => Ok("sched_getscheduler "),

        331 => Ok("sched_yield "),
        332 => Ok("sched_get_priority_max "),
        333 => Ok("sched_get_priority_min "),
        334 => Ok("sched_rr_get_interval "),
        335 => Ok("utrace"),
        336 => Ok("sendfile"),
        337 => Ok("kldsym"),
        338 => Ok("jail"),
        339 => Ok("nnpfs_syscall"),
        340 => Ok("sigprocmask"),
        341 => Ok("sigsuspend"),
        342 => Ok("sigaction"),
        343 => Ok("sigpending"),
        344 => Ok("sigreturn"),
        345 => Ok("sigtimedwait"),
        346 => Ok("sigwaitinfo"),
        347 => Ok("__acl_get_file"),
        348 => Ok("__acl_set_file"),
        349 => Ok("__acl_get_fd"),
        350 => Ok("__acl_set_fd"),
        351 => Ok("__acl_delete_file"),
        352 => Ok("__acl_delete_fd"),
        353 => Ok("__acl_aclcheck_file"),
        354 => Ok("__acl_aclcheck_fd"),
        355 => Ok("extattrctl"),
        356 => Ok("extattr_set_file"),
        357 => Ok("extattr_get_file"),
        358 => Ok("extattr_delete_file"),
        359 => Ok("aio_waitcomplete"),
        360 => Ok("getresuid"),
        361 => Ok("getresgid"),
        362 => Ok("kqueue"),
        363 => Ok("kevent"),
        371 => Ok("extattr_set_fd"),
        372 => Ok("extattr_get_fd"),
        373 => Ok("extattr_delete_fd"),
        374 => Ok("__setugid"),
        376 => Ok("eaccess"),
        377 => Ok("afs3_syscall"),
        378 => Ok("nmount"),
        384 => Ok("__mac_get_proc"),
        385 => Ok("__mac_set_proc"),
        386 => Ok("__mac_get_fd"),
        387 => Ok("__mac_get_file"),
        388 => Ok("__mac_set_fd"),
        389 => Ok("__mac_set_file"),
        390 => Ok("kenv"),
        391 => Ok("lchflags"),
        392 => Ok("uuidgen"),
        393 => Ok("sendfile"),
        394 => Ok("mac_syscall"),
        395 => Ok("getfsstat"),
        396 => Ok("statfs"),
        397 => Ok("fstatfs"),
        398 => Ok("fhstatfs"),
        400 => Ok("ksem_close"),
        401 => Ok("ksem_post"),
        402 => Ok("ksem_wait"),
        403 => Ok("ksem_trywait"),
        404 => Ok("ksem_init"),
        405 => Ok("ksem_open"),
        406 => Ok("ksem_unlink"),
        407 => Ok("ksem_getvalue"),
        408 => Ok("ksem_destroy"),
        409 => Ok("__mac_get_pid"),
        410 => Ok("__mac_get_link"),
        411 => Ok("__mac_set_link"),
        412 => Ok("extattr_set_link"),
        413 => Ok("extattr_get_link"),
        414 => Ok("extattr_delete_link"),
        415 => Ok("__mac_execve"),
        416 => Ok("sigaction"),
        417 => Ok("sigreturn"),
        421 => Ok("getcontext"),
        422 => Ok("setcontext"),
        423 => Ok("swapcontext"),
        424 => Ok("swapoff"),
        425 => Ok("__acl_get_link"),
        426 => Ok("__acl_set_link"),
        427 => Ok("__acl_delete_link"),
        428 => Ok("__acl_aclcheck_link"),
        429 => Ok("sigwait"),
        430 => Ok("thr_create"),
        431 => Ok("thr_exit"),
        432 => Ok("thr_self"),
        433 => Ok("thr_kill"),
        436 => Ok("jail_attach"),
        437 => Ok("extattr_list_fd"),
        438 => Ok("extattr_list_file"),
        439 => Ok("extattr_list_link"),
        441 => Ok("ksem_timedwait"),
        442 => Ok("thr_suspend"),
        443 => Ok("thr_wake"),
        444 => Ok("kldunloadf"),
        445 => Ok("audit"),
        446 => Ok("auditon"),
        447 => Ok("getauid"),
        448 => Ok("setauid"),
        449 => Ok("getaudit"),
        450 => Ok("setaudit"),
        451 => Ok("getaudit_addr"),
        452 => Ok("setaudit_addr"),
        453 => Ok("auditctl"),
        454 => Ok("_umtx_op"),
        455 => Ok("thr_new"),
        456 => Ok("sigqueue"),
        457 => Ok("kmq_open"),
        458 => Ok("kmq_setattr"),
        459 => Ok("kmq_timedreceive"),
        460 => Ok("kmq_timedsend"),
        461 => Ok("kmq_notify"),
        462 => Ok("kmq_unlink"),
        463 => Ok("abort2"),
        464 => Ok("thr_set_name"),
        465 => Ok("aio_fsync"),
        466 => Ok("rtprio_thread"),
        471 => Ok("sctp_peeloff"),
        472 => Ok("sctp_generic_sendmsg"),
        473 => Ok("sctp_generic_sendmsg_iov"),
        474 => Ok("sctp_generic_recvmsg"),
        475 => Ok("pread"),
        476 => Ok("pwrite"),
        477 => Ok("mmap"),
        478 => Ok("lseek"),
        479 => Ok("truncate"),
        480 => Ok("ftruncate"),
        481 => Ok("thr_kill2"),
        482 => Ok("shm_open"),
        483 => Ok("shm_unlink"),
        484 => Ok("cpuset"),
        485 => Ok("cpuset_setid"),
        486 => Ok("cpuset_getid"),
        487 => Ok("cpuset_getaffinity"),
        488 => Ok("cpuset_setaffinity"),
        489 => Ok("faccessat"),
        490 => Ok("fchmodat"),
        491 => Ok("fchownat"),
        492 => Ok("fexecve"),
        493 => Ok("fstatat"),
        494 => Ok("futimesat"),
        495 => Ok("linkat"),
        496 => Ok("mkdirat"),
        497 => Ok("mkfifoat"),
        498 => Ok("mknodat"),
        499 => Ok("openat"),
        500 => Ok("readlinkat"),
        501 => Ok("renameat"),
        502 => Ok("symlinkat"),
        503 => Ok("unlinkat"),
        504 => Ok("posix_openpt"),
        505 => Ok("gssd_syscall"),
        506 => Ok("jail_get"),
        507 => Ok("jail_set"),
        508 => Ok("jail_remove"),
        509 => Ok("closefrom"),
        510 => Ok("__semctl"),
        511 => Ok("msgctl"),
        512 => Ok("shmctl"),
        513 => Ok("lpathconf"),
        515 => Ok("__cap_rights_get"),
        516 => Ok("cap_enter"),
        517 => Ok("cap_getmode"),
        518 => Ok("pdfork"),
        519 => Ok("pdkill"),
        520 => Ok("pdgetpid"),
        522 => Ok("pselect"),
        523 => Ok("getloginclass"),
        524 => Ok("setloginclass"),
        525 => Ok("rctl_get_racct"),
        526 => Ok("rctl_get_rules"),
        527 => Ok("rctl_get_limits"),
        528 => Ok("rctl_add_rule"),
        529 => Ok("rctl_remove_rule"),
        530 => Ok("posix_fallocate"),
        531 => Ok("posix_fadvise"),
        532 => Ok("wait6"),
        533 => Ok("cap_rights_limit"),
        534 => Ok("cap_ioctls_limit"),
        535 => Ok("cap_ioctls_get"),
        536 => Ok("cap_fcntls_limit"),
        537 => Ok("cap_fcntls_get"),
        538 => Ok("bindat"),
        539 => Ok("connectat"),
        540 => Ok("chflagsat"),
        541 => Ok("accept4"),
        542 => Ok("pipe2"),
        543 => Ok("aio_mlock"),
        544 => Ok("procctl"),
        545 => Ok("ppoll"),
        546 => Ok("futimens"),
        547 => Ok("utimensat"),
        548 => Ok("numa_getaffinity"),
        549 => Ok("numa_setaffinity"),
        550 => Ok("fdatasync"),
        x => Err(Error::bad_value("system call number", x.to_string())),
    }
    .map(str::to_string)
}
